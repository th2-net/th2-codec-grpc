plugins {
    id 'com.palantir.docker' version '0.25.0'
    id 'java'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version "${kotlin_version}"
    id 'com.google.protobuf' version '0.8.16'
    id 'org.jetbrains.kotlin.kapt' version "${kotlin_version}"
}

ext {
    sharedDir = file("${project.rootDir}/shared")
    genDir = 'gen/'
    genTestGrpc = genDir + 'test/grpc'
    genTestJava = genDir + 'test/java'
}

group = 'com.exactpro.th2'
version = release_version

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    maven {
        name 'MavenLocal'
        url sharedDir
    }
    mavenLocal()
    mavenCentral()
    maven {
        name 'Sonatype_snapshots'
        url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
    }
    maven {
        name 'Sonatype_releases'
        url 'https://s01.oss.sonatype.org/content/repositories/releases/'
    }

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }
}

jar {
    manifest {
        attributes(
                'Created-By':               "${System.getProperty('java.version')} (${System.getProperty('java.vendor')})",
                'Specification-Title':      '',
                'Specification-Vendor':     'Exactpro Systems LLC',
                'Implementation-Title':     project.archivesBaseName,
                'Implementation-Vendor':    'Exactpro Systems LLC',
                'Implementation-Vendor-Id': 'com.exactpro',
                'Implementation-Version':   project.version
        )
    }
}

configurations {
    testImplementation {
        exclude group: 'junit'
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

dependencies {
    api platform('com.exactpro.th2:bom:4.1.0')

    api "com.exactpro.th2:common:5.1.0-dev-version-5+"

    implementation 'com.exactpro.th2:codec:5.0.1-dev-version-5+'
    implementation "com.exactpro.th2:grpc-common:4.1.0-dev-version-4+"

    implementation "org.slf4j:slf4j-api"
    implementation "io.github.microutils:kotlin-logging:3.0.0"

    implementation "io.grpc:grpc-protobuf"
    implementation "com.google.protobuf:protobuf-java-util"

    implementation "com.github.os72:protoc-jar-maven-plugin:3.11.4"


    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0"

    testImplementation 'javax.annotation:javax.annotation-api:1.3.2'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

    compileOnly 'com.google.auto.service:auto-service:1.0.1'
    annotationProcessor 'com.google.auto.service:auto-service:1.0.1'
    kapt 'com.google.auto.service:auto-service:1.0.1'
}

test {
    useJUnitPlatform()
}

compileTestJava {
    dependsOn("generateTestProto")
}

application {
    mainClassName 'com.exactpro.th2.codec.MainKt'
}

applicationName = 'service'

distTar {
    archiveName "${applicationName}.tar"
}

dockerPrepare {
    dependsOn distTar
}

docker {
    copySpec.from(tarTree("$buildDir/distributions/${applicationName}.tar"))
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}

sourceSets {
    test {
        java {
            srcDir 'gen/test/grpc'
            srcDir 'gen/test/java'
        }
    }
}

protobuf {
    generatedFilesBaseDir = "$projectDir/gen"

    protoc {
        artifact = "com.google.protobuf:protoc:3.17.2"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.39.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

clean {
    delete genDir
}
